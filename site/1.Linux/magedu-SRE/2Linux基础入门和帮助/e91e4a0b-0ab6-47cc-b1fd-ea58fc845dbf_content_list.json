[
    {
        "type": "text",
        "text": "Linux基础入门",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "讲师：王晓春 ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Linux 基础入门",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "内容概述",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1 Linux 基础",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.1 用户类型.2 终端 terminal1.2.1 终端类型1.2.2 查看当前的终端设备",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.3 交互式接口",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.3.1 交互式接口类型  \n1.3.2 什么是shell  \n1.3.3 各种Shell  \n1.3.4 bash shell",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.4 设置主机名 ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.5 命令提示符 prompt ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.6 执行命令",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.6.1 执行命令过程  \n1.6.2 shell中可执行的两类命令1.6.2.1 内部命令相关1.6.2.2 执行外部命令  \n1.6.3 命令别名  \n1.6.4 命令格式",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.7 常见命令",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.7.1 查看硬件信息",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.7.1.1 查看 cpu1.7.1.2 查看内存大小1.7.1.3 查看硬盘和分区情况  \n1.7.2 查看系统版本信息1.7.2.1 查看系统架构1.7.2.2 查看内核版本1.7.2.3 查看操作系统发行版本  \n1.7.3 日期和时间  \n1.7.4 关机和重启  \n1.7.5 用户登录信息查看命令  \n1.7.6 文本编辑  \n1.7.7 会话管理1.7.7.1 screen",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1.7.7.2 tmux1.7.8 输出信息 echo1.7.8.1 echo 基本用法1.7.8.2 echo 高级用法",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1.8 字符集和编码",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1.8.1 ASCII码   \n1.8.2 Unicode ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1.9 命令行扩展和被括起来的集合",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1.9.1 命令行扩展：\\`\\` 和 \\$()1.9.2 括号扩展：{ }1.10 tab 键补全1.10.1 命令补全1.10.2 路径补全1.10.3 双击Tab键1.11 命令行历史1.12  调用命令行历史1.13 bash的快捷键",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "2 获得帮助",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "2.1 whatis  \n2.2 查看命令的帮助2.2.1 内部命令帮助2.2.2 外部命令及软件帮助  \n2.3 外部命令的--help 或 -h 选项  \n2.4 man 命令  \n2.5 info  \n2.6 命令自身提供的官方使用指南  \n2.7 系统及第三方应用官方文档2.7.1 通过在线文档获取帮助2.7.2 Linux官方在线文档和知识库2.7.3 红帽全球技术支持服务",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "2.8 相关网站和搜索",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "Linux 基础入门",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "内容概述",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "用户  \n终端  \nShell介绍  \n执行命令  \n简单命令  \nTab键补全命令行历史bash快捷键",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "帮助用法",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "1 Linux 基础",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "1.1 用户类型",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "root 用户一个特殊的管理帐户也被称为超级用户root已接近完整的系统控制对系统损害几乎有无限的能力除非必要,不要登录为 root  \n普通（ 非特权 ）用户权限有限造成损害的能力比较有限",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "1.2 终端 terminal ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "image",
        "img_path": "images/05a5b82950683e6e3753600a5f27d435283f7c9190fa298f69286a67f0990f37.jpg",
        "img_caption": [],
        "img_footnote": [
            "设备终端：键盘、鼠标、显示器"
        ],
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "1.2.1 终端类型",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "控制台终端： /dev/console串行终端：/dev/ttyS#虚拟终端：tty：teletypewriters， /dev/tty#，tty 可有n个，Ctrl+Alt+F#图形终端：startx, xwindowsC $\\mathsf{\\bar{e n t O S}6:C t r l+A l t+F7}$ CentOS 7: 在哪个终端启动，即位于哪个虚拟终端伪终端：pty：pseudo-tty ， /dev/pts/#  如：SSH远程连接",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "1.2.2 查看当前的终端设备",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "tty 命令可以查看当前所在终端",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "范例：",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#tty /dev/pts/0 ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "1.3 交互式接口",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "交互式接口：启动终端后，在终端设备附加一个交互式应用程序",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "1.3.1 交互式接口类型",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "GUI：Graphic User Interface X protocol, window manager, desktop Desktop: GNOME (C, 图形库gtk)， KDE $C{+}{+}.$ ,图形库qt) XFCE  (轻量级桌面) CLI：Command Line Interface shell程序 ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "1.3.2 什么是shell",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "image",
        "img_path": "images/1f7c1f358314e46b9de8012d1f5522393b2e06afaff753288ee1304eef2f2e42.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Shell 是Linux系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "shell也被称为LINUX的命令解释器（command interpreter），Shell 本身是一个程序。将用户输入的命令行拆解为”命令名“与”参数“。接着，根据命令名找到对应要执行的程序，对被执行的程序进行初始化，然后将刚才解析出来的参数传给该程序并执行",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "shell是一种高级程序设计语言，提供了变量，函数，条件判断，循环等开发语言的功能",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "由于Shell本身是个程序，所以它可以被任何用户自己开发的各种Shell所代替",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "1.3.3 各种Shell",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "image",
        "img_path": "images/2d34ec50c3b73a1df5c04d1caffcd2c023e93ffd8bd49690959c1dec14a180d2.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "sh：Steve Bourne  \nbash：Bourne-Again Shell，GPL，CentOS  和 Ubuntu 默认使用  \ncsh：c shell , C 语言风格  \ntcsh  \nksh ：Korn Shell, AIX 默认 shell  \nzsh： MacOS默认shell",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "1.3.4 bash shell ",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "GNU Bourne-Again Shell(bash)是GNU计划中重要的工具软件之一，目前也是 Linux标准的shell，与sh兼容",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "显示当前使用的shell",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "echo \\${SHELL} ",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "显示当前系统使用的所有shell",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "cat /etc/shells ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "1.4 设置主机名 ",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "#临时生效 ",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "hostname NAME ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "#持久生效,支持CentOS7和Ubuntu18.04以上版本hostnamectl set-hostname NAME",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "范例",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#hostname bj-yz-k8s-node1-100-10.magedu.local ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "注意：",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "主机名不支持使用下划线，但支持横线，可使用字母，横线或数字组合有些软件对主机名有特殊要求",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#hostnamectl set-hostname centos8.1   \n[root@centos8 \\~]#systemctl restart postfix   \nJob for postfix.service failed because the control process exited with error code.   \nSee \"systemctl status postfix.service\" and \"journalctl -xe\" for details. ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "1.5 命令提示符 prompt ",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "登录Linux后，默认的系统命令提示符毫无没有个性，无法明显辨别生产和测试环境，而导致误操作。可以通过修改PS1变量实现个性的提示符格式，避免这种低级错误",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "范例：默认的提示符",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "#CentOS默认提示符 [root@localhost \\~]# ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "#Ubuntu默认提示符 root@ubuntu1804:\\~# ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "# 管理员$\\$1$ 普通用户",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "显示提示符格式",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#echo \\$PS1 \\[\\e[1;35m\\][\\u@\\h \\W]\\\\$\\[\\e[0m\\] ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "修改提示符格式范例",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "PS1=\"\\[\\e[1;5;41;33m\\][\\u@\\h \\W]\\\\\\$\\[\\e[0m\\]\"   \nPS1 $\\c=$ \"\\[\\e[1;32m\\][\\t \\[\\e[1;33m\\]\\u\\[\\e[35m\\]@\\h\\[\\e[1;31m\\] \\W\\[\\e[1;32m\\]]\\   \n[\\e[0m\\]\\\\\\$\" ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "提示符格式说明：",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "\\e  控制符\\033  \n\\u 当前用户  \n\\h  主机名简称\\H 主机名\\w 当前工作目录\\W 当前工作目录基名\\t  24小时时间格式",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "\\T  12小时时间格式!  命令历史数# 开机后命令历史数范例：在CentOS系统实现持久保存提示符格式",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]# echo 'PS1 $=$ \"\\[\\e[1;32m\\][\\t \\[\\e[1;33m\\]\\u\\[\\e[35m\\]@\\h\\ [\\e[1;31m\\] \\W\\[\\e[1;32m\\]]\\[\\e[0m\\]\\\\\\$\"' $>$ /etc/profile.d/env.sh   \n[root@centos8 \\~]#cat /etc/profile.d/env.sh   \nPS1=\"\\[\\e[1;32m\\][\\t \\[\\e[1;33m\\]\\u\\[\\e[35m\\]@\\h\\[\\e[1;31m\\] \\W\\[\\e[1;32m\\]]\\ [\\e[0m\\]\\\\\\$\"   \n[root@centos8 \\~]# exit   \nlogout   \nConnection closed by foreign host.   \nDisconnected from remote host(centos8) at 15:28:38.   \nType \\`help' to learn how to use Xshell prompt.   \n$[c:\\backslash\\sim]\\$1$   \nReconnecting in 1 seconds. Press any key to exit local shell   \nConnecting to 10.0.0.100:22..   \nConnection established.   \nTo escape to local shell, press 'Ctrl+Alt+]'   \nActivate the web console with: systemctl enable --now cockpit.socket   \nLast login: Wed Dec 11 15:28:34 2019 from 10.0.0.1   \n[15:28:40 root@centos8 \\~]# ",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "外部命令：在文件系统路径下有对应的可执行程序文件,当执行命令时才从磁盘加载至内存中,执行完毕后从内存中删除",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "区别指定的命令是内部或外部命令",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "type COMMAND ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "范例: 查看是否存在对应内部和外部命令",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#type -a echo echo is a shell builtin echo is /usr/bin/echo ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "1.6.2.1 内部命令相关",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "help 内部命令列表enable 管理内部命令",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "enable cmd 启用内部命令enable –n cmd 禁用内部命令enable –n 查看所有禁用的内部命令",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "1.6.2.2 执行外部命令",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "查看外部命令路径：",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "which  -a |--skip-alias whereis ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "Hash缓存表",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "系统初始hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当再次使用该命令时，shell解释器首先会查看hash表，存在将执行之，如果不存在，将会去PATH路径下寻找，利用hash缓存表可大大提高命令的调用速率",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "hash 命令常见用法",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "hash 显示hash缓存  \nhash -l  显示hash缓存，可作为输入使用  \nhash -p path  name 将命令全路径path起别名为name  \nhash -t name 打印缓存中name的路径  \nhash -d name 清除name缓存  \nhash -r  清除缓存",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "1.6.3 命令别名 ",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "对于经常执行的较长的命令，可以将其定义成较短的别名，以方便执行显示当前shell进程所有可用的命令别名",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "alias ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "定义别名NAME，其相当于执行命令VALUEalias NAME $\\overset{\\cdot}{\\underset{\\cdot}{=}}$ 'VALUE'范例: 扫描新加的磁盘",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#alias scandisk $\\c=$ 'echo - >   \n/sys/class/scsi_host/host0/scan;echo -   \n/sys/class/scsi_host/host1/scan;echo - - $>$ /sys/class/scsi_host/host2/scan' ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "范例: 持久保存别名 撤消别名：unalias unalias [-a] name [name ...] unalias -a #取消所有别名 ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "注意：在命令行中定义的别名，仅对当前shell进程有效如果想永久有效，要定义在配置文件中仅对当前用户：\\~/.bashrc对所有用户有效：/etc/bashrc编辑配置给出的新配置不会立即生效，bash进程重新读取配置文件",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "source /path/to/config_file /path/to/config_file ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "如果别名同原命令同名，如果要执行原命令，可使用",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "\\ALIASNAME   \n“ALIASNAME”   \n‘ALIASNAME’   \ncommand ALIASNAME   \n/path/commmand #只适用于外部命令 ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "1.6.4 命令格式",
        "text_level": 1,
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "COMMAND [OPTIONS...] [ARGUMENTS...] COMMAND [COMMAND] [COMMAND] ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "选项：用于启用或关闭命令的某个或某些功能短选项：UNIX 风格选项，-c  例如：-l, -h长选项：GNU风格选项，--word 例如：--all, --humanBSD风格选项： 一个字母，例如：a，使用相对较少",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "参数：命令的作用对象，比如:文件名，用户名等",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "范例:",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#id -u wang 1000 [root@centos8 \\~]#ls -a [root@centos8 \\~]#ls --all [root@centos8 \\~]#free -h [root@centos8 \\~]#free --human [root@centos8 \\~]#ps a ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "注意：",
        "text_level": 1,
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "多个选项以及多参数和命令之间使用空白字符分隔取消和结束命令执行：Ctrl $+\\mathsf{c}$ ，Ctrl+d  \n多个命令可以用 \";\" 符号分开  \n一个命令可以用\\分成多行",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "1.7 常见命令",
        "text_level": 1,
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "1.7.1 查看硬件信息",
        "text_level": 1,
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "1.7.1.1 查看 cpu",
        "text_level": 1,
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "lscpu命令可以查看cpu信息cat /proc/cpuinfo也可看查看到",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "范例：",
        "text_level": 1,
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]# lscpu   \nArchitecture: $\\times86\\_64$   \nCPU op-mode(s): 32-bit, 64-bit   \nByte Order: Little Endian   \nCPU(s): 8   \nOn-line CPU(s) list: 0-7   \nThread(s) per core: 1 #每个core 有几个线程   \nCore(s) per socket: 4 #每个槽位有4个core   \nSocket(s): 2 #服务器面板上有2个cpu 槽位   \nNUMA node(s): 2 #nodes的数量   \nVendor ID: GenuineIntel   \nCPU family: 6   \nModel: 44   \nStepping: 2   \nCPU MHz: 2128.025   \nBogoMIPS: 4256.03   \nVirtualization: VT-x   \nL1d cache: 32K   \nL1i cache: 32K   \nL2 cache: 256K   \nL3 cache: 8192K   \nNUMA node0 CPU(s): 0,2,4,6 #对应的core   \nNUMA node1 CPU(s): 1,3,5,7 ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]# cat /proc/cpuinfo ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "1.7.1.2 查看内存大小",
        "text_level": 1,
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#free total use Mem: 816188 15688 Swap: 2097148 [root@centos8 \\~]#cat /proc/mem MemTotal: 816188 kB MemFree: 412780 kB MemAvailable: 527144 kB Buffers: 5304 kB Cached: 208252 kB SwapCached: 0 kB Active: 138976 kB Inactive: 127508 kB Active(anon): 53348 kB Inactive(anon): 5368 kB Active(file): 85628 kB Inactive(file): 122140 kB Unevictable: 0 kB Mlocked: 0 kB SwapTotal: 2097148 kB SwapFree: 2097148 kB Dirty: 0 kB Writeback: 0 kB AnonPages: 52964 kB Mapped: 78456 kB Shmem: 5792 kB KReclaimable: 33084 kB Slab: 69144 kB SReclaimable: 33084 kB SUnreclaim: 36060 kB KernelStack: 4428 kB PageTables: 5888 kB NFS_Unstable: 0 kB Bounce: 0 kB WritebackTmp: 0 kB CommitLimit: 2505240 kB Committed_AS: 250040 kB VmallocTotal: 34359738367 kB VmallocUsed: 0 kB VmallocChunk: 0 kB HardwareCorrupted: 0 kB AnonHugePages: 6144 kB ShmemHugePages: 0 kB ShmemPmdMapped: 0 kB HugePages_Total: 0 HugePages_Free: 0 HugePages_Rsvd: 0 HugePages_Surp: 0 Hugepagesize: 2048 kB Hugetlb: 0 kB DirectMap4k: 108416 kB DirectMap2M: 940032 kB DirectMap1G: 0 kB [root@centos8 \\~]# ",
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "1.7.1.3 查看硬盘和分区情况",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#lsblk   \nNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT   \nsda 8:0 0 200G 0 disk   \n├─sda1 8:1 0 1G 0 part /boot   \n├─sda2 8:2 0 100G 0 part /   \n├─sda3 8:3 0 50G 0 part /data   \n├─sda4 8:4 0 1K 0 part   \n└─sda5 8:5 0 2G 0 part [SWAP]   \nsr0 11:0 1 7G 0 rom   \n[root@centos8 \\~]#cat /proc/partitions   \nmajor minor #blocks name ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "8 0 209715200 sda   \n8 1 1048576 sda1   \n8 2 104857600 sda2   \n8 3 52428800 sda3   \n8 4 1 sda4   \n8 5 2097152 sda5   \n11 0 7377920 sr0 ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "1.7.2 查看系统版本信息",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "1.7.2.1 查看系统架构",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "root@ubuntu2004:\\~# arch   \nx86_64   \n[root@centos8 \\~]# arch   \nx86_64   \n[root@rhel5 \\~]# arch   \ni686 ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "1.7.2.2 查看内核版本",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#uname 4.18.0-147.el8.x86_64 ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "[root@centos7 \\~]#uname -r 3.10.0-1062.el7.x86_64 ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "[root@centos6 \\~]# uname -r 2.6.32-754.el6.x86_64 ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "[root@ubuntu1804 \\~]#uname -r 4.15.0-29-generic ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "1.7.2.3 查看操作系统发行版本",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "#CentOS8 查看发行版本 [root@centos8 \\~]#cat /etc/redhat-release CentOS Linux release 8.1.1911 (Core) [root@centos8 \\~]#cat /etc/os-release ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "NAME $\\c=$ \"CentOS Linux\"   \nVERSION=\"8 (Core)\"   \nID=\"centos\"   \nID_LIKE $\\c=$ \"rhel fedora\"   \nVERSION_ID $\\vDash$ \"8\"   \nPLATFORM_ID $\\vDash$ \"platform:el8\"   \nPRETTY_NAME $\\c=$ \"CentOS Linux 8 (Core)\"   \nANSI_COLOR $\\c=$ \"0;31\"   \nCPE_NAME $\\c=$ \"cpe:/o:centos:centos:8\"   \nHOME_URL $\\v{x}=$ \"https://www.centos.org/\"   \nBUG_REPORT_URL $\\c=$ \"https://bugs.centos.org/\" ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "CENTOS_MANTISBT_PROJECT $\\mathbf{\\dot{\\eta}}=\\mathbf{\\eta}$ \"CentOS-8\" CENTOS_MANTISBT_PROJECT_VERSION=\"8\" REDHAT_SUPPORT_PRODUCT $\\mathbf{\\dot{\\eta}}=\\mathbf{\\eta}$ \"centos\" REDHAT_SUPPORT_PRODUCT_VERSION=\"8\" ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#lsb_release -a   \nLSB Version: :core-4.1-amd64:core-4.1-noarch   \nDistributor ID: CentOS   \nDescription: CentOS Linux release 8.1.1911 (Core)   \nRelease: 8.1.1911   \nCodename: Core   \n[root@centos8 \\~]# ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "#ubuntu查看发行版本",
        "text_level": 1,
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "[root@ubuntu1804 \\~]#cat /etc/os-release   \nNAME $\\c=$ \"Ubuntu\"   \nVERSION $\\vDash$ \"18.04.1 LTS (Bionic Beaver)   \nID $\\vDash$ ubuntu   \nID_LIKE $\\c=$ debian   \nPRETTY_NAME $\\c=$ \"Ubuntu 18.04.1 LTS\"   \nVERSION_ID $\\vDash$ \"18.04\"   \nHOME_URL $\\c=$ \"https://www.ubuntu.com/\"   \nSUPPORT_URL $\\c=$ \"https://help.ubuntu.com/\"   \nBUG_REPORT_URL $\\c=$ \"https://bugs.launchpad.net/ubuntu/\"   \nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy  \npolicy\"   \nVERSION_CODENAME=bionic   \nUBUNTU_CODENAME=bionic ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "[root@ubuntu1804 \\~]#cat /etc/issue Ubuntu 18.04.1 LTS \\n \\l ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "[root@ubuntu1804 \\~]#lsb_release -a No LSB modules are available.   \nDistributor ID: Ubuntu   \nDescription: Ubuntu 18.04.1 LTS Release: 18.04   \nCodename: bionic   \n[root@ubuntu1804 \\~]# ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "范例: 查看 OS 版本",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "CentOS   \n[root@centos8 \\~]#lsb_release -cs   \nCore   \n[root@centos8 \\~]#lsb_release  -rs   \n8.2.2004   \n[root@centos7 \\~]#lsb_release  -is   \nCentOS   \n[root@centos7 \\~]#lsb_release -cs   \nCore   \n[root@centos7 \\~]#lsb_release  -rs   \n7.9.2009   \n[root@centos6 \\~]#lsb_release -is   \nCentOS   \n[root@centos6 \\~]#lsb_release -cs   \nFinal   \n[root@centos6 \\~]#lsb_release -rs   \n6.10   \nroot@ubuntu2004:\\~# lsb_release  -is   \nUbuntu   \nroot@ubuntu2004:\\~# lsb_release -cs   \nfocal   \nroot@ubuntu2004:\\~# lsb_release -rs   \n20.04   \n[root@ubuntu1804 \\~]#lsb_release  -is   \nUbuntu   \n[root@ubuntu1804 \\~]#lsb_release -cs   \nbionic   \n[root@ubuntu1804 \\~]#lsb_release -rs   \n18.04 ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "1.7.3 日期和时间",
        "text_level": 1,
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "Linux的两种时钟 ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "系统时钟：由Linux内核通过CPU的工作频率进行的硬件时钟：主板",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "相关命令",
        "text_level": 1,
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "date  显示和设置系统时间范例：",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#date +%s 1584689051 [root@centos8 \\~]#date -d @\\`date +%s Fri Mar 20 15:24:18 CST 2020 ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#date -d @1584689051   \nFri Mar 20 15:24:11 CST 2020 ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#date -d @1584689051 +%F_%T 2020-03-20_15:24:11 ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "[root@ubuntu \\~]#date -d \"2020-02-02\" +%s 1580572800 ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "clock，hwclock: 显示硬件时钟-s, --hctosys #以硬件时钟为准，校正系统时钟-w, --systohc #以系统时钟为准，校正硬件时钟",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "范例:",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#ll /usr/sbin/clock lrwxrwxrwx. 1 root root 7 Apr 24  2020 /usr/sbin/clock -> hwclock ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "时区：",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "/etc/localtime ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "范例:",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#timedatectl list-timezones   \n[root@centos8 \\~]#timedatectl set-timezone Asia/Shanghai   \n[root@centos8 \\~]#timedatectl  status Local time: Mon 2020-07-27 17:20:56 CST Universal time: Mon 2020-07-27 09:20:56 UTC RTC time: Mon 2020-07-27 09:20:56 Time zone: Asia/Shanghai (CST, $+0800\\dot{}$ )   \nSystem clock synchronized: yes NTP service: active RTC in local TZ: no   \n[root@centos8 \\~]#ll /etc/localtime   \nlrwxrwxrwx. 1 root root 35 Dec 11 11:19 /etc/localtime ->   \n../usr/share/zoneinfo/Asia/Shanghai ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "root@ubuntu1804:\\~# cat /etc/timezone Asia/Shanghai ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "显示日历：",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "cal –y ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "范例:",
        "text_level": 1,
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "[16:47:36 root@centos8 \\~]#cal 9 1752 September 1752   \nSu Mo Tu We Th Fr Sa 1 2 14 15 16   \n17 18 19 20 21 22 23   \n24 25 26 27 28 29 30 ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "1.7.4 关机和重启 ",
        "text_level": 1,
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "关机：",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "halt poweroff ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "重启：",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "reboot  \n-f: 强制，不调用shutdown  \n-p: 切断电源",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "关机或重启：shutdown shutdown [OPTION]. [TIME] [MESSAGE] ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "-r: reboot  \n-h: halt  \n-c：cancel  \nTIME：无指定，默认相当于 $^{\\cdot+1}$ （CentOS7）now: 立刻,相当于 $^{\\cdot+0}$ +#: 相对时间表示法，几分钟之后；例如 $+3$ hh:mm: 绝对时间表示，指明具体时间",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "1.7.5 用户登录信息查看命令",
        "text_level": 1,
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "whoami: 显示当前登录有效用户who: 系统当前所有的登录会话w: 系统当前所有的登录会话及所做的操作",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "1.7.6 文本编辑",
        "text_level": 1,
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "nano 工具可以实现文本的编辑，上手容易，适合初学者gedit 工具是图形工具",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "范例: 创建登录提示文件 /etc/motd参考网站: https://www.bootschool.net/ascii-art",
        "page_idx": 15
    },
    {
        "type": "image",
        "img_path": "images/85e7db6f0a64e56d0f44272d7a19715beb76ba82f21b4b02ef7f281b90e870f4.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "[root@ubuntu1804 \\~]#cat /etc/motd ",
        "page_idx": 16
    },
    {
        "type": "image",
        "img_path": "images/d0ddf7854a9e720a2f41f8028f8f897384b54ac875dd8eb362207d0ea55c4c08.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "91 updates are security updates. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "New release '20.04.1 LTs' available.   \nRun 'do-release-upgrade' to upgrade to it. ",
        "page_idx": 17
    },
    {
        "type": "image",
        "img_path": "images/e1419e5fadaf77888cd6de4a2285f4fc54ce388b0e4a04cbe6f7c39a38bbc465.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "1.7.7 会话管理",
        "text_level": 1,
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称\"窗口\"），在里面输入命令。用户与计算机的这种临时的交互，称为一次\"会话\"（session）",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "会话的一个重要特点是，窗口与其中启动的进程是连在一起的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "一个典型的例子就是，SSH 登录远程计算机，打开一个远程窗口执行命令。这时，网络突然断线，再次登录的时候，是找不回上一次执行的命令的。因为上一次 SSH 会话已经终止了，里面的进程也随之消失了。为了解决这个问题，会话与窗口可以\"解绑\"：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话\"绑定\"其他窗口",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "终端复用器软件就是会话与窗口的\"解绑\"工具，将它们彻底分离。",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "（1）它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。  \n（2） 它可以让新窗口\"接入\"已经存在的会话。  \n（3）它允许每个会话有多个连接窗口，因此可以多人实时共享会话。  \n（4）它还支持窗口任意的垂直和水平拆分。  \n类似的终端复用器还有Screen，Tmux",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "1.7.7.1 screen ",
        "text_level": 1,
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "利用screen 可以实现会话管理,如：新建会话,共享会话等注意：CentOS7 来自于base源，CentOS8 来自于epel源",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "范例：安装 screen",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "#CentOS7 安装screen [root@centos7 \\~]#yum -y install screen #CentOS8 安装screen [root@centos8 \\~]#dnf -y install epel-release [root@centos8 \\~]#dnf -y install screen ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "screen命令常见用法：",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "创建新screen会话screen –S [SESSION]  \n加入screen会话screen $-x$ [SESSION]  \n退出并关闭screen会话exit  \n剥离当前screen会话$\\mathsf{C}\\mathsf{t r}|+\\mathsf{a},\\mathsf{d}$ 显示所有已经打开的screen会话screen -ls  \n恢复某screen会话screen -r [SESSION]",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "1.7.7.2 tmux ",
        "text_level": 1,
        "page_idx": 18
    },
    {
        "type": "image",
        "img_path": "images/63c67c128e139577ff7dfb7acb5050e8023b1a0439ab1d951fa5024976c2b514.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "Tmux 是一个终端复用器（terminal multiplexer），类似 screen，但是更易用，也更强大",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "Tmux 就是会话与窗口的\"解绑\"工具，将它们彻底分离，功能如下",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。它可以让新窗口\"接入\"已经存在的会话。  \n它允许每个会话有多个连接窗口，因此可以多人实时共享会话。  \n它还支持窗口任意的垂直和水平拆分",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "安装",
        "text_level": 1,
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "yum install tmux ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "启动与退出",
        "text_level": 1,
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#tmux [root@centos8 \\~]#exit logout ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "mux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是 $c(r]+b$ ，即先按下Ctrl+b ，快捷键才会生效。帮助命令的快捷键是Ctrl $+\\mathsf{b}$ ? 然后，按下q 键，就可以退出帮助",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "新建会话",
        "text_level": 1,
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "第一个启动的 Tmux 窗口，编号是0，第二个窗口的编号是1，以此类推。这些窗口对应的会话，就是 0号会话、1 号会话。使用编号区分会话，不太直观，更好的方法是为会话起名。下面命令新建一个指定名称的会话。",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "tmux new -s <session-name> ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "tmux ls或Ctr $|+|_{0,5}$ 可以查看当前所有的 Tmux 会话",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "tmux ls tmux list-session ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "分离会话",
        "text_level": 1,
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "在 Tmux 窗口中，按下 $c_{ Ḋ }\\mathrm{tr}|+\\mathrm{b}_{ Ḋ }$ d或者输入tmux detach命令，就会将当前会话与窗口分离。",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "tmux detach ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "接入会话tmux attach 命令用于重新接入某个已存在的会话。",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "tmux attach -t <session-name> ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "可以将窗口分成多个窗格（pane），每个窗格运行不同的命令",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "上下分窗格",
        "text_level": 1,
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "tmux split-window ctrl $+\\mathsf{b}$ ,\" ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "左右分窗格",
        "text_level": 1,
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "tmux split-window -h ctrl+b,% ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "窗格快捷键 ",
        "text_level": 1,
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Ctrl+b %：划分左右两个窗格  \nCtrl $+6$ \"：划分上下两个窗格  \nCtrl $+6$ <arrow key>：光标切换到其他窗格。<arrow key>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键↓  \nCtrl $+6$ ;：光标切换到上一个窗格  \nCtrl $+6$ o：光标切换到下一个窗格。  \nCtrl $+6$ $+\\mathsf{b}$ {}：当前窗格左右移  \nCtrl $+6$ Ctrl $+0$ ：当前窗格上移  \nCtrl $+6$ Al $t+0$ ：当前窗格下移  \nCtrl $+6$ x：关闭当前窗格  \nCtrl $+6$ !：将当前窗格拆分为一个独立窗口  \nCtrl $+6$ z：当前窗格全屏显示，再使用一次会变回原来大小  \nCtrl $+\\mathsf{b}$ Ctrl $^+$ <arrow key>：按箭头方向调整窗格大小  \nCtrl $+6$ q：显示窗格编号",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "窗口管理",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口新建窗口tmux new-window命令用来创建新窗口",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "tmux new-window ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "新建一个指定名称的窗口",
        "text_level": 1,
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "tmux new-window -n <window-name>",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "切换窗口  \ntmux select-window命令用来切换窗口  \n切换到指定编号的窗口",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "tmux select-window -t <window-number> ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "切换到指定名称的窗口",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "tmux select-window -t <window-name> ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "窗口快捷键 ",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "Ctrl $+6$ c：创建一个新窗口，状态栏会显示多个窗口的信息。  \nCtrl $+6$ p：切换到上一个窗口（按照状态栏上的顺序）。  \nCtrl $+6$ n：切换到下一个窗口。  \nCtrl $+6$ <number>：切换到指定编号的窗口，其中的<number>是状态栏上的窗口编号Ctrl $+6$ w：从列表中选择窗口  \nCtrl $+6$ ,：窗口重命名",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "列出所有快捷键，及其对应的 Tmux 命令",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "tmux list-keys列出所有 Tmux 命令及其参数tmux list-commands",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "1.7.8 输出信息 echo",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "1.7.8.1 echo 基本用法",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "echo 命令可以将后面跟的字符进行输出  \n功能：显示字符，echo会将输入的字符串送往标准输出。输出的字符串间以空白字符隔开, 并在最后加  \n上换行号  \n语法：",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "echo [-neE][字符串] ",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "选项：",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "-E  （默认）不支持 \\ 解释功能-n  不自动换行-e  启用 \\ 字符的解释功能",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "显示变量",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "echo \"\\$VAR_NAME” #用变量值替换，弱引用echo '\\$VAR_NAME’ #变量不会替换，强引用启用命令选项-e，若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "\\a 发出警告声\\b 退格键\\c 最后不加上换行符号\\e escape，相当于\\033\\n 换行且光标移至行首$v$ 回车，即光标移至行首，但不换行\\t 插入tab  \n\\\\   插入\\字符\\0nnn 插入nnn（八进制）所代表的ASCII字符\\xHH插入HH（十六进制）所代表的ASCII数字（man 7 ascii）",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#echo -e 'a\\x0Ab'   \na   \nb   \n[root@centos8 \\~]#echo -e '\\033[43;31;1;5mmagedu\\e[0m'   \nmagedu   \n[root@centos8 \\~]#echo -e '\\x57\\x41\\x4E\\x47'   \nWANG   \n[root@centos8 \\~]#echo \\\\$PATH   \n\\$PATH   \n[root@centos8 \\~]#echo \\   \n[root@centos8 \\~]#echo \\\\   \n\\   \n[root@centos8 \\~]#echo \\\\\\   \n>   \n[root@centos8 \\~]#echo \\\\\\\\   \n\\\\   \n[root@centos8 \\~]#echo \"\\$PATH\"   \n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin   \n[\\$rPoAoTtH@centos8 \\~]#echo '\\$PATH' ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "1.7.8.2 echo 高级用法",
        "text_level": 1,
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "在终端中，ANSI定义了用于屏幕显示的Escape屏幕控制码具有颜色的字符，其格式如下:",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "\"\\033[字符背景颜色;字体颜色m字符串\\033[0m\" ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "\\033[30m   --   \\033[37m   设置前景色\\033[40m   --   \\033[47m   设置背景色",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "#字符背景颜色范围: 40--47  \n40:黑  \n41:红  \n42:绿  \n43:黄  \n44:蓝  \n45:紫  \n46:深绿  \n47:白色  \n#字体颜色: 30--37  \n30: 黑  \n31: 红  \n32: 绿  \n33: 黄  \n34: 蓝  \n35: 紫  \n36: 深绿",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "37: 白色",
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "加颜色只是以下控制码中的一种，下面是常见的一些ANSI控制码：",
        "page_idx": 23
    },
    {
        "type": "table",
        "img_path": "images/2f9fcf854ee9ac7c87ecaac6bf12f429f3a472d10c91722ff4455ea5d941738e.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "\n\n<html><body><table><tr><td>\\033[0m</td><td>关闭所有属性</td></tr><tr><td>\\033[1m</td><td>设置高亮度</td></tr><tr><td>\\033[4m</td><td>下划线</td></tr><tr><td>\\033[5m</td><td>闪烁</td></tr><tr><td>\\033[7m</td><td>反显</td></tr><tr><td>\\033[8m</td><td>消隐</td></tr><tr><td>\\033[nA</td><td>光标上移n行</td></tr><tr><td>\\033[nB</td><td>光标下移n行</td></tr><tr><td>\\033[nC</td><td>光标右移n列</td></tr><tr><td>\\033[nD</td><td>光标左移n列</td></tr><tr><td>\\033[×;yH</td><td>设置光标位置x行y列</td></tr><tr><td>\\033[2]</td><td>清屏</td></tr><tr><td>\\033[K</td><td>清除从光标到行尾的内容</td></tr><tr><td>\\033[s</td><td>育 保存光标位置</td></tr><tr><td>\\033[u</td><td>恢复光标位置</td></tr><tr><td>\\033[?25]</td><td>隐藏光标</td></tr><tr><td>\\033[?25h</td><td>显示光标</td></tr><tr><td>\\033[2]\\033[0;OH</td><td>清屏且将光标置顶</td></tr></table></body></html>\n\n",
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "1.8 字符集和编码",
        "text_level": 1,
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "许多场合下，字符集与编码这两个概念常被混为一谈，但两者是有差别的。字符集与字符集编码是两个不同层面的概念",
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "charset是character set的简写，即字符集，即二进制和字符的对应关系，不关注最终的存储形式encoding是charset encoding的简写，即字符集编码，简称编码，实现如何将字符转化为实际的二进制进行存储或相反，编码决定了空间的使用的大小",
        "page_idx": 23
    },
    {
        "type": "image",
        "img_path": "images/1799b0a3e87ef12e59697c2699487b888b5db022befb50e8a9d53124e1207b3c.jpg",
        "img_caption": [
            "学H在O"
        ],
        "img_footnote": [],
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "1.8.1 ASCII码",
        "text_level": 1,
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "计算机内部，所有信息最终都是一个二进制值。上个世纪60年代，美国制定了一套字符编码，对英语字符与二进制位之间的关系，做了统一规定，即ASCII（American Standard Code for InformationInterchange） 码",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "ASCII 码一共规定了128个字符的编码，占用了一个字节的后面7位，最前面的一位统一规定为 0",
        "page_idx": 24
    },
    {
        "type": "table",
        "img_path": "images/982771b9a1b40345437ddb5961e95eb83dbe1c81b2b1528f48e1a5eb32d97df1.jpg",
        "table_caption": [],
        "table_footnote": [
            "范例：查看 ascii 表"
        ],
        "table_body": "\n\n<html><body><table><tr><td></td><td>Decinal Hexadecimal Binary Octal Char</td><td></td><td></td><td></td><td></td><td>Decinal Hexadecimal Binary</td><td></td><td></td><td>Octal Char</td><td></td><td>Decimal Hexadecimal Binary</td><td></td><td>Octal Char</td><td></td></tr><tr><td>0</td><td>0</td><td>0</td><td></td><td>[NULL]</td><td>48</td><td>30</td><td></td><td>110000 60</td><td></td><td>96</td><td>60</td><td></td><td>1100000140</td><td></td></tr><tr><td>1</td><td></td><td>i</td><td></td><td>[STARTOFHEADING]</td><td>49</td><td>31</td><td>110001</td><td>61</td><td></td><td>97</td><td>61</td><td></td><td>1100001141</td><td>a</td></tr><tr><td>2</td><td>HN</td><td>10</td><td>NM</td><td>[STARTOFTEXT]</td><td>50</td><td>32</td><td>110010</td><td>62</td><td></td><td>98</td><td>62</td><td></td><td>1100010142</td><td>b</td></tr><tr><td>3</td><td>3</td><td>11</td><td></td><td>[END OFTEXT]</td><td>51</td><td>33</td><td>110011</td><td>63</td><td>0123</td><td>99</td><td>63</td><td></td><td>1100011143</td><td></td></tr><tr><td>4</td><td>4</td><td>100</td><td>4</td><td>[END OF TRANSMISSION]</td><td>52</td><td>34</td><td>110100</td><td>64</td><td>4</td><td>100</td><td>64</td><td></td><td>1100100144</td><td>d</td></tr><tr><td>5</td><td>5</td><td>101</td><td></td><td>[ENQUIRY]</td><td>53</td><td>35</td><td>110101</td><td>65</td><td>5</td><td>101</td><td>65</td><td></td><td>1100101145</td><td></td></tr><tr><td>6</td><td>6</td><td>110</td><td>6</td><td>[ACKNOWLEDGE]</td><td>54</td><td>36</td><td>110110</td><td>66</td><td>670</td><td>102</td><td>66</td><td></td><td>1100110146</td><td>f</td></tr><tr><td>7</td><td>7</td><td>111</td><td>7</td><td>[BELL]</td><td>55</td><td>37</td><td>110111</td><td>67</td><td></td><td>103</td><td>67</td><td>1100111147</td><td></td><td>g</td></tr><tr><td>8</td><td>8</td><td>1000</td><td>10</td><td>[BACKSPACE]</td><td>56</td><td>38</td><td>111000</td><td>70</td><td>8</td><td>104</td><td>68</td><td>1101000150</td><td></td><td>h</td></tr><tr><td>9</td><td>9</td><td>1001</td><td>11</td><td>[HORIZONTALTAB]</td><td>57</td><td>39</td><td>111001</td><td>71</td><td>9</td><td>105</td><td>69</td><td>1101001151</td><td></td><td>i</td></tr><tr><td>10</td><td>A</td><td>1010</td><td>12</td><td>[LINEFEED]</td><td>58</td><td>3A</td><td>111010</td><td>72</td><td>：</td><td>106</td><td>6A</td><td></td><td>1101010152</td><td></td></tr><tr><td>11</td><td>B</td><td>1011</td><td>13</td><td>[VERTICALTAB]</td><td>59</td><td>3B</td><td>111011</td><td>73</td><td></td><td>107</td><td>6B</td><td></td><td>1101011153</td><td>k</td></tr><tr><td>12</td><td>C</td><td>1100</td><td>14</td><td>[FORMFEED]</td><td>60</td><td>3C</td><td>111100</td><td>74</td><td></td><td>108</td><td>6C</td><td></td><td>1101100154</td><td>！</td></tr><tr><td>13</td><td>D</td><td>1101</td><td>15</td><td>[CARRIAGERETURN]</td><td>61</td><td>3D</td><td>111101</td><td>75</td><td></td><td>109</td><td>6D</td><td></td><td>1101101155</td><td>m</td></tr><tr><td>14</td><td></td><td>1110</td><td>16</td><td>[SHIFTOUT]</td><td>62</td><td>3</td><td></td><td>111110 76</td><td>></td><td>110</td><td>6E</td><td></td><td>1101110156</td><td>n</td></tr><tr><td>15</td><td>EF</td><td>1111</td><td>17</td><td>[SHIFTIN]</td><td>63</td><td>3F</td><td>111111</td><td>77</td><td>？</td><td>111</td><td>6F</td><td></td><td>1101111157</td><td></td></tr><tr><td>16</td><td>10</td><td>10000</td><td>20</td><td>[DATA LINK ESCAPE]</td><td>64</td><td>40</td><td></td><td>1000000100</td><td>?</td><td>112</td><td>70</td><td>1110000160</td><td></td><td>P</td></tr><tr><td>17</td><td>11</td><td>10001</td><td>21</td><td>[DEVICECONTROL1]</td><td>65</td><td>41</td><td></td><td>1000001101</td><td>A</td><td>113</td><td>71</td><td>1110001161</td><td></td><td></td></tr><tr><td>18</td><td>12</td><td>10010</td><td>22</td><td>[DEVICECONTROL2]</td><td>66</td><td>42</td><td></td><td>1000010102</td><td>B</td><td>114</td><td>72</td><td></td><td>1110010162</td><td>r</td></tr><tr><td>19</td><td>13</td><td>10011</td><td>23</td><td>[DEVICECONTROL3]</td><td>67</td><td>43</td><td></td><td>1000011103</td><td></td><td>115</td><td>73</td><td></td><td>1110011163</td><td></td></tr><tr><td>20</td><td>14</td><td>10100</td><td>24</td><td>[DEVICECONTROL4]</td><td>68</td><td>44</td><td></td><td>1000100104</td><td>D</td><td>116</td><td>74</td><td>1110100164</td><td></td><td>t</td></tr><tr><td>21</td><td>15</td><td>10101</td><td>25</td><td>[NEGATIVEACKNOWLEDGE]</td><td>69</td><td>45</td><td></td><td>1000101105</td><td></td><td>117</td><td>75</td><td>1110101165</td><td></td><td>u</td></tr><tr><td>22</td><td>16</td><td>10110</td><td>26</td><td>[SYNCHRONOUSIDLE]</td><td>70</td><td>46</td><td></td><td>1000110106</td><td>F</td><td>118</td><td>76</td><td>1110110166</td><td></td><td></td></tr><tr><td>23</td><td>17</td><td>10111</td><td>27</td><td>[ENG OF TRANS.BLOCK]</td><td>71</td><td>47</td><td></td><td>1000111107</td><td>G</td><td>119</td><td>77</td><td></td><td>1110111167</td><td>w</td></tr><tr><td>24</td><td>18</td><td>11000</td><td>30</td><td>[CANCEL]</td><td>72</td><td>48</td><td></td><td>1001000110</td><td>H</td><td>120</td><td>78</td><td>1111000170</td><td></td><td>x</td></tr><tr><td>25</td><td>19</td><td>11001</td><td>31</td><td>[END OFMEDUM]</td><td>73</td><td>49</td><td></td><td>1001001111</td><td></td><td>121</td><td>79</td><td>1111001171</td><td></td><td></td></tr><tr><td>26</td><td>1A</td><td>11010</td><td>32</td><td>[SUBSTITUTE]</td><td>74</td><td>4A</td><td></td><td>1001010112</td><td></td><td>122</td><td>7A</td><td>1111010 172</td><td></td><td>y</td></tr><tr><td>27</td><td>18</td><td>11011</td><td>33</td><td>[ESCAPE] [FILESEPARATORJ</td><td>75 76</td><td>4B 4C</td><td></td><td>1001011113 1001100114</td><td>K</td><td>123 124</td><td>78 元</td><td>1111011173</td><td></td><td>【</td></tr><tr><td>28 29</td><td>1C 1D</td><td>11100 11101</td><td>34 35</td></table></body></html>\n\n",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#dnf -y install  man-pages [root@centos8 \\~]#man ascii ",
        "page_idx": 24
    },
    {
        "type": "image",
        "img_path": "images/fb1c6ffb46ad6202125e6fe2b69d40f018e27124d37a9f20b2d9c8f3593f2f45.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "1.8.2 Unicode ",
        "text_level": 1,
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "由于计算机是美国人发明的，因此，最早只有127个字母被编码到计算机里，即ASCII编码，但是要处理中文显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突，所以，中国制定了GB2312编码，用来把中文编进去。",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "全世界有上百种语言，日本把日文编到Shift_JIS里，韩国把韩文编到Euc-kr里，各国有各国的标准，就会不可避免地出现冲突，结果就是，在多语言混合的文本中，显示出来会有乱码",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "为了表示世界上所有语言中的所有字符。每一个符号都给予一个独一无二的编码数字，Unicode 是一个很大的集合，现在的规模可以容纳100多万个符号。Unicode 仅仅只是一个字符集，规定了每个字符对应的二进制代码，至于这个二进制代码如何存储则没有规定",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "Unicode编码方案：",
        "text_level": 1,
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "UTF-8：变长，1到4个字节UTF-16：变长，2或4个字节UTF-32：固定长度，4个字节",
        "page_idx": 25
    },
    {
        "type": "image",
        "img_path": "images/1cb467eef8275a56616fdac39985993e9a3badd4c99efd6c70a3e22610f71d4f.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "UTF-8 是目前互联网上使用最广泛的一种 Unicode 编码方式，可变长存储。使用 1 - 4 个字节表示一个字符，根据字符的不同变换长度。编码规则如下：",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "对于单个字节的字符，第一位设为 0，后面的 7 位对应这个字符的 Unicode 码。因此，对于英文中的 0- 127 号字符，与 ASCII 码完全相同。这意味着 ASCII 码的文档可用 UTF-8 编码打开对于需要使用 N 个字节来表示的字符（ $N>1$ ），第一个字节的前 N 位都设为 1，第 $N+1$ 位设为0，剩余的 N - 1 个字节的前两位都设位 10，剩下的二进制位则使用这个字符的 Unicode 码来填充",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "编码转换和查询参考链接：",
        "text_level": 1,
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "https://home.unicode.org/   \nhttp://www.chi2ko.com/tool/CJK.htm   \nhttps://www.bejson.com/convert/unicode_chinese/   \nhttps://javawind.net/tools/native2ascii.jsp?action=transform   \nhttp://tool.oschina.net/encode   \nhttp://web.chacuo.net/charsetescape ",
        "page_idx": 26
    },
    {
        "type": "table",
        "img_path": "images/0b82a44b37244856e12192ecd4638365a89a56acbd821770ce832812a08c217e.jpg",
        "table_caption": [
            "Unicode和UTF-8 "
        ],
        "table_footnote": [
            "范例：Unicode 转换为 UTF-8"
        ],
        "table_body": "\n\n<html><body><table><tr><td>Unicode符号范围(十六进制)</td><td>UTF-8编码方式二进制)</td></tr><tr><td>0000 0000-0000 007F</td><td>0xxxxxXx</td></tr><tr><td>00000080-000007FF</td><td>110xxxxx 10xxxxxx</td></tr><tr><td>0000 0800-0000 FFFF</td><td>1110xxxx 10xxxxxx 10xxxxxx</td></tr><tr><td>0001 0000-0010 FFFF</td><td>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</td></tr></table></body></html>\n\n",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "“汉”的 Unicode 码 $0\\times6\\mathsf{C}49$ （110 110001 001001），需要三个字节存储，格式为： 1110xxxx10xxxxxx 10xxxxxx，从后向前依次填充对应格式中的 x，多出的 $\\times$ 用 0 补，得出UTF-8 编码为11100110 10110001 10001001",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "“马”的 Unicode 码 $0\\times9\\mathsf{A6C}$ （1001 101001 101100），需要三个字节存储，格式为： 1110xxxx10xxxxxx 10xxxxxx，从后向前依次填充对应格式中的 x，多出的 $\\times$ 用 0 补，得出UTF-8 编码为11101001 10101001 10101100",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "范例：修改LANG变量实现中文语言提示",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "[root@centos7 \\~]#echo \\$LANG   \nen_US.UTF-8   \n[root@centos7 \\~]#magedu   \n-bash: magedu: command not found   \n[root@centos7 \\~]#LANG $\\c=$ zh_CN.UTF-8   \n[root@centos7 \\~]#echo \\$LANG   \nzh_CN.UTF-8   \n[root@centos7 \\~]#magedu   \n-bash: magedu: 未找到命令   \npublic static void main(String args[]）   \n{ Stringa=\"\\u4f18\\u79c0\"; System.out.println(a);   \n} ",
        "page_idx": 27
    },
    {
        "type": "image",
        "img_path": "images/7e43fc5aee13904a1acf8eaf3f5511eb63c5284aa465cd0387b41499a2a73afd.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "1.9 命令行扩展和被括起来的集合",
        "text_level": 1,
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "1.9.1 命令行扩展：\\`\\` 和 \\$()",
        "text_level": 1,
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "把一个命令的输出打印给另一个命令的参数,放在\\`\\`中的一定是有输出信息的命令",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "\\$(COMMAND) 或 \\`COMMAND",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#echo \"echo \\$HOSTNAME\" echo centos8.localdomain   \n[root@centos8 \\~]#echo 'echo \\$HOSTNAME' echo \\$HOSTNAME   \n[root@centos8 \\~]#echo \\`echo \\$HOSTNAME\\` centos8.localdomain ",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "#结论：",
        "text_level": 1,
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "单引号：强引用,六亲不认，变量和命令都不识别，都当成了普通的字符串,\"最傻\"  \n双引号：弱引用,不能识别命令，可以识别变量,\"半傻不精\"  \n反向单引号：里面的内容必须是能执行的命令并且有输出信息,变量和命令都识别，并且会将反向单引号的内  \n容当成命令进行执行后，再交给调用反向单引号的命令继续,\"最聪明\"",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "范例：",
        "text_level": 1,
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "[09:18:04 root@centos8 data]#echo \"This system's name is \\$(hostname)\"   \nThis system's name is centos8.magedu.org   \n[09:18:55 root@centos8 data]#echo \"I am \\`whoami   \nI am root   \n[09:15:37 root@centos8 data]#touch \\$(date +%F).log   \n[09:16:29 root@centos8 data]#ls   \n2019-12-13.log   \n[09:16:31 root@centos8 data]#ll   \ntotal 0   \n-rw-r--r--. 1 root root 0 Dec 13 09:16 2019-12-13.log   \n[09:16:34 root@centos8 data]#touch \\`date +%F\\`.txt   \n[09:17:14 root@centos8 data]#ll   \ntotal 0   \n-rw-r--r--. 1 root root 0 Dec 13 09:16 2019-12-13.log   \n-rw-r--r--. 1 root root 0 Dec 13 09:17 2019-12-13.txt   \n[09:17:15 root@centos8 data]#touch \\`hostname\\`-\\`date +%F\\`.log   \n[09:18:02 root@centos8 data]#ll   \ntotal 0   \n-rw-r--r--. 1 root root 0 Dec 13 09:16 2019-12-13.log   \n-rw-r--r--. 1 root root 0 Dec 13 09:17 2019-12-13.txt   \n-rw-r--r--. 1 root root 0 Dec 13 09:18 centos8.magedu.org-2019-12-13.log ",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#touch \\`date +%F_%H-%M-%S\\`.log [root@centos8 \\~]#touch \\`date -d '-1 day' +%F\\`.log ",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "范例： $\\$($ 和",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#ll \\`echo \\`date +%F\\`.txt -bash: .txt: command not found ls: cannot access 'date': No such file or directory ls: cannot access '+%F': No such file or directory [root@centos8 \\~]#ll \\$(echo \\$(date +%F).txt) -rw-r--r-- 1 root root 0 Mar 20 09:55 2020-03-20.txt [root@centos8 \\~]#ll \\`echo \\$(date $+\\%+$ ).txt\\` -rw-r--r-- 1 root root 0 Mar 20 09:55 2020-03-20.txt [root@centos8 \\~]#ll \\$(echo \\`date +%F\\`.txt) -rw-r--r-- 1 root root 0 Mar 20 09:55 2020-03-20.txt ",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "1.9.2 括号扩展：{ } ",
        "text_level": 1,
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "{} 可以实现打印重复字符串的简化形式{元素1,元素2,元素3}{元素1..元素2}",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "echo file{1,3,5} 结果为：file1 file3 file5  \nrm -f file{1,3,5}  \necho {1..10}  \necho {a..z}  \necho {1..10..2}  \necho {000..20..2}",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "范例:",
        "text_level": 1,
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#echo {000..20..2}   \n000 002 004 006 008 010 012 014 016 018 020   \n[root@centos8 \\~]#echo {a..z..2}   \na c e g i k m o q s u w y   \n[root@centos8 \\~]#echo {A..z}   \nA B C D E F G H I M N O P R S T U V W X b c d e f g h i   \nj k ",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "范例:  关闭和启用{}的扩展功能",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#echo \\$-   \nhimBHs   \n[root@centos8 \\~]#echo {1..10}   \n1 2 3 4 5 6 7 8 9 10   \n[root@centos8 \\~]#set +B   \n[root@centos8 \\~]#echo \\$-   \nhimHs   \n[root@centos8 \\~]#echo {1..10}   \n{1..10}   \n[root@centos8 \\~]#set -B   \n[root@centos8 \\~]#echo \\$-   \nhimBHs   \n[root@centos8 \\~]#echo {1..10}   \n1 2 3 4 5 6 7 8 9 10 ",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "1.10 tab 键补全 ",
        "text_level": 1,
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "tab 键可以实现命令及路径等补全，提高输入效率，避免出错 ",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "1.10.1 命令补全 ",
        "text_level": 1,
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "内部命令：  \n外部命令：bash根据PATH环境变量定义的路径，自左而右在每个路径搜寻以给定命令名命名的文件，第一次找到的命令即为要执行的命令  \n命令的子命令补全，需要安装 bash-completion",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "注意：用户给定的字符串只有一条惟一对应的命令，直接补全，否则，再次Tab会给出列表",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#nmcli connection 2TAB add delete edit help load monitor show clone down export import modify reload up ",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "1.10.2 路径补全",
        "text_level": 1,
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "把用户给出的字符串当做路径开头，并在其指定上级目录下搜索以指定的字符串开头的文件名",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "如果惟一：则直接补全",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "否则：再次Tab给出列表",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "1.10.3 双击Tab键",
        "text_level": 1,
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "command 2Tab  所有子命令或文件补全  \nstring2Tab  以string开头命令  \n/2Tab  显示所有根目录下一级目录，包括隐藏目录  \n./2Tab  当前目录下子目录，包括隐藏目录  \n\\*2Tab  当前目录下子目录，不包括隐藏目录  \n$\\$27$ ab    所有用变户量列表  \n$@$ 2Tab  /etc/hosts记录 （centos7 不支持）  \n$\\mathbf{\\Sigma}=\\mathbf{\\Sigma}$ 2Tab  相当于ls –A  （centos7不支持）",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "1.11 命令行历史",
        "text_level": 1,
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "当执行命令后，系统默认会在内存记录执行过的命令当用户正常退出时，会将内存的命令历史存放对应历史文件中，默认是\\~/.bash_history登录shell时，会读取命令历史文件中记录下的命令加载到内存中登录进shell后新执行的命令只会记录在内存的缓存区中；这些命令会用户正常退出时“追加”至命令历史文件中",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "利用命令历史。可以用它来重复执行命令，提高输入效率",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "命令：history ",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "history [-c] [-d offset] [n] history -anrw [filename] history -ps arg [arg...] ",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "常用选项：",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "-c: 清空命令历史  \n-d  offset: 删除历史中指定的第offset个命令  \nn: 显示最近的n条历史  \n-a: 追加本次会话新执行的命令历史列表至历史文件  \n-r: 读历史文件附加到历史列表  \n-w: 保存历史列表到指定的历史文件  \n-n: 读历史文件中未读过的行到历史列表  \n-p: 展开历史参数成多行，但不存在历史列表中  \n-s: 展开历史参数成一行，附加在历史列表后",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "命令历史相关环境变量",
        "text_level": 1,
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "HISTSIZE：命令历史记录的条数  \nHISTFILE：指定历史文件，默认为 $\\sim$ /.bash_history  \nHISTFILESIZE：命令历史文件记录历史的条数  \nHISTTIMEFORMAT=\"%F %T \\`whoami\\` \" 显示时间和用户  \nHISTIGNORE $\\c=$ \"str1:str2\\*:…\" 忽略str1命令，str2开头的历史  \nHISTCONTROL：控制命令历史的记录方式  \nignoredups 是默认值，可忽略重复的命令，连续且相同为“重复”  \nignorespace 忽略所有以空白开头的命令  \nignoreboth 相当于ignoredups, ignorespace的组合  \nerasedups 删除重复命令",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "持久保存变量",
        "text_level": 1,
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "以上变量可以 export 变量名 $\\mathbf{\\Phi}=\\mathbf{\\Phi}^{\\prime}$ 值\" 形式存放在  /etc/profile 或 \\~/.bash_profile",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#cat .bash_profile   \n# .bash_profile   \n# Get the aliases and functions   \nif [ -f \\~/.bashrc ]; then . \\~/.bashrc   \nfi   \n# User specific environment and startup programs   \nPATH=\\$PATH:\\$HOME/bin   \nexport PATH   \nexport HISTCONTROL $.=$ ignoreboth   \nexport HISTTIMEFORMAT $\\mathbf{\\dot{\\eta}}=\\mathbf{\\eta}$ \"%F %T \"   \n[root@centos8 \\~]#history 1 2019-12-13 08:39:05 ls /data 2 2019-12-13 08:39:05 date 3 2019-12-13 08:39:05 vie0 4 2019-12-13 08:39:05 nano .bash_profile 5 2019-12-13 08:39:05 exit ",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "1.12 调用命令行历史",
        "text_level": 1,
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "#重复前一个命令方法",
        "text_level": 1,
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "重复前一个命令使用上方向键，并回车执行  \n按 !! 并回车执行  \n输入!-1 并回车执行  \n按 Ctrl $+{\\mathsf p}$ 并回车执行",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "!:0 执行前一条命令（去除参数）!n 执行history命令输出对应序号n的命令!-n 执行history历史中倒数第n个命令!string 重复前一个以“string”开头的命令!?string 重复前一个包含string的命令!string:p 仅打印命令历史，而不执行",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "!\\$:p 打印输出 $1.5$ （上一条命令的最后一个参数）的内容  \n!\\*:p 打印输出 !\\*（上一条命令的所有参数）的内容  \n^string 删除上一条命令中的第一个string  \n^string1^string2 将上一条命令中的第一个string1替换为string2  \n!:gs/string1/string2 将上一条命令中所有的string1都替换为 string2  \n使用up（向上）和down（向下）键来上下浏览从前输入的命令  \nctrl-r来在命令历史中搜索命令  \n（reverse-i-search）\\`’：  \nCtrl $+{\\mathfrak{g}}$ ：从历史搜索模式退出",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "#要重新调用前一个命令中最后一个参数",
        "text_level": 1,
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "$1.5$ 表示前一个命令中最后一个参数Esc, . 点击Esc键后松开，然后点击 . 键$\\mathsf{A l t}+$ . 按住Alt键的同时点击 . 键",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "command !^ 利用上一个命令的第一个参数做command的参数  \ncommand $1.5$ 利用上一个命令的最后一个参数做command的参数  \ncommand !\\* 利用上一个命令的全部参数做command的参数  \ncommand !:n 利用上一个命令的第n个参数做command的参数  \ncommand !n:^ 调用第n条命令的第一个参数  \ncommand !n:\\$ 调用第n条命令的最后一个参数  \ncommand !n:m 调用第n条命令的第m个参数  \ncommand !n:\\* 调用第n条命令的所有参数  \ncommand !string:^ 从命令历史中搜索以 string 开头的命令，并获取它的第一个参数  \ncommand !string:\\$ 从命令历史中搜索以 string 开头的命令,并获取它的最后一个参数  \ncommand !string:n 从命令历史中搜索以 string 开头的命令，并获取它的第n个参数  \ncommand !string:\\* 从命令历史中搜索以 string 开头的命令，并获取它的所有参数",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "1.13 bash的快捷键 ",
        "text_level": 1,
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "Ctrl $+7$ 清屏，相当于clear命令  \nCtrl $\\mathrm{~+~}0$ 执行当前命令，并重新显示本命令  \nCtrl $+\\ s$ 阻止屏幕输出，锁定  \nCtrl $\\texttt{+q}$ 允许屏幕输出，解锁  \nCtrl $\\mathrm{~\\ensuremath~{~+~}~c~}$ 终止命令  \nCtrl $+\\ z$ 挂起命令  \nCtrl $\\texttt{+a}$ 光标移到命令行首，相当于Home  \nCtrl $+\\ \\mathsf{e}$ 光标移到命令行尾，相当于End  \nCtrl $^{+\\dagger}$ 光标向右移动一个字符  \nCtrl $+\\ b$ 光标向左移动一个字符  \nCtrl $\\mathbf{\\Psi}+\\mathbf{\\Psi}\\times\\mathbf{\\Psi}$ 光标在命令行首和光标之间移动",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "Alt + f 光标向右移动一个单词尾Alt + b 光标向左移动一个单词首Ctrl $+\\ \\mathfrak{u}$ 从光标处删除至命令行首Ctrl $+\\textbf{\\textmu}\\mathbf{k}$ 从光标处删除至命令行尾Alt $^+$ r 删除当前整行Ctrl $+\\textsf{w}$ 从光标处向左删除至单词首Alt $^+$ d 从光标处向右删除至单词尾Alt $^+$ Backspace 删除左边单词Ctrl + d 删除光标处的一个字符",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "Ctrl + h 删除光标前的一个字符  \nCtrl + y 将删除的字符粘贴至光标后  \nAlt $^+$ c 从光标处开始向右更改为首字母大写的单词Alt + u 从光标处开始，将右边一个单词更改为大写Alt + l 从光标处开始，将右边一个单词更改为小写Ctrl + t 交换光标处和之前的字符位置  \nAlt + t 交换光标处和之前的单词位置  \nAlt + # 提示输入指定字符后，重复显示该字符#次",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "范例：xshell中启动 alt 键",
        "page_idx": 33
    },
    {
        "type": "image",
        "img_path": "images/27d2f3c25daa9d9dffab44ff21a042eaf44c16cdcf41bc326c627bbed3a87129.jpg",
        "img_caption": [],
        "img_footnote": [
            "注意：Alt 组合快捷键经常和其它软件冲突"
        ],
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "2 获得帮助",
        "text_level": 1,
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "获取帮助的能力决定了技术的能力！",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "多层次的帮助",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "whatis  \ncommand --help  \nman and info  \n/usr/share/doc/  \nRed Hat documentation 、Ubuntu documentation  \n软件项目网站  \n其它网站  \n搜索",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "2.1 whatis ",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "whatis 使用数据库来显示命令的简短描述此工具在系统刚安装后，不可立即使用，需要制作数据库后才可使用",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "执行下面命令生成数据库",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "#CentOS 7 版本以后mandb  \n#CentOS 6 版本之前makewhatis",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "范例：",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#whatis cal cal (1) - display a calendar cal (1p) - print a calendar [root@centos8 \\~]#man -f cal cal (1) - display a calendar cal (1p) - print a calendar ",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#whatis ls   \nls: nothing appropriate.   \n#生成man相关数据库   \n[root@centos8 \\~]#mandb   \nProcessing manual pages under /usr/share/man..   \nUpdating index cache for path \\`/usr/share/man/mann'. Wait...done. Checking for stray cats under /usr/share/man..   \n...省略...   \n0 old database entries were purged.   \n[root@centos8 \\~]#whatis ls   \nls (1) - list directory contents ",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "2.2 查看命令的帮助",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "2.2.1 内部命令帮助",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "help COMMAND man bash ",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#type history   \nhistory is a shell builtin   \n[root@centos8 \\~]#help history   \nhistory: history [-c] [-d offset] [n] or history -anrw [filename] or history -ps arg [arg...]   \nDisplay or manipulate the history list. ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "Display the history list with line numbers, prefixing each modified entry with a \\`\\*' An argument of N lists only the last N entries. ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "Options: ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "-c clear the history list by deleting all of the entries   \n-d offset delete the history entry at position OFFSET.   \n-a append history lines from this session to the history file   \n-n read all history lines not already read from the history file and append them to the history list   \n-r read the history file and append the contents to the history list   \n-w write the current history to the history file   \n-p perform history expansion on each ARG and display the result without storing it in the history list   \n-s append the ARGs to the history list as a single entry ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "If FILENAME is given, it is used as the history file.  Otherwise, if HISTFILE has a value, that is used, else \\~/.bash_history. ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "If the HISTTIMEFORMAT variable is set and not null, its value is used as a format string for strftime(3) to print the time stamp associated with each displayed history entry.  No time stamps are printed otherwise. ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "Exit Status: Returns success unless an invalid option is given or an error occurs. ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "2.2.2 外部命令及软件帮助",
        "text_level": 1,
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "COMMAND --help  或  COMMAND -h  \n使用 man 手册(manual)： man COMMAND  \n信息页：info COMMAND  \n程序自身的帮助文档：README、INSTALL、ChangeLog  \n程序官方文档  \n相关网站，如：技术论坛  \n搜索引擎",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "2.3 外部命令的--help 或 -h 选项",
        "text_level": 1,
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "显示用法总结和参数列表，大多数命令使用，但并非所有的",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "范例：",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#date --help   \nUsage: date [OPTION]... [+FORMAT] or:  date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]   \nDisplay the current time in the given FORMAT, or set the system date. ",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#cal -h Usage: cal [options] [[[day] month] year] cal [options] <timestamp|monthname> [root@centos8 \\~]#strace --help strace: invalid option -- '-' Try 'strace -h' for more information. ",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#openssl --help Invalid command '--help'; type \"help\" for a list. ",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#date -h date: invalid option -- 'h' Try 'date --help' for more information. ",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#shutdown -h Shutdown scheduled for Fri 2020-03-20 08:26:27 CST, use 'shutdown -c' to cancel. ",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "格式说明：",
        "text_level": 1,
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "[] 表示可选项CAPS或 $\\Leftrightarrow$ 表示变化的数据... 表示一个列表  \nx |y| z 的意思是 $^\\prime\\times$ 或 y 或 z ”-abc的 意思是 -a -b –c  \n{ }  表示分组",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "练习：",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "1、显示当前时间，格式：2016-06-18 10:20:30  \n2、显示前天是星期几  \n3、设置当前日期为2019-08-07 06:05:10",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "2.4 man 命令",
        "text_level": 1,
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "man 提供命令帮助的文件,手册页存放在/usr/share/man",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "几乎每个命令都有man的“页面” ",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "中文man需安装包",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "man-pages man-pages-zh-CN ",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "man 页面分组",
        "text_level": 1,
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "不同类型的帮助称为不同的“章节”，统称为Linux手册，man 1 man",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "1：用户命令2：系统调用3：C库调用4：设备文件及特殊文件5：配置文件格式6：游戏7：杂项",
        "page_idx": 36
    },
    {
        "type": "text",
        "text": "8：管理类的命令  \n9：Linux 内核API",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "man命令的配置文件：",
        "text_level": 1,
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "#CentOS 6 之前版 man 的配置文件  \n/etc/man.config  \n#CentOS 7 之后版 man 的配置文件  \n/etc/man_db.conf  \n#ubuntu  man 的配置文件  \n/etc/manpath.config",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "格式：",
        "text_level": 1,
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "MANPATH /PATH/TO/SOMEWHERE #指明man文件搜索位置",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "也可以指定位置下搜索COMMAND命令的手册页并显示",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "man -M /PATH/TO/SOMEWHERE COMMAND ",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "查看man手册页",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "man [OPTION...] [SECTION] PAGE.. man [章节] keyword ",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "man 帮助段落说明",
        "text_level": 1,
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "NAME  名称及简要说明  \nSYNOPSIS 用法格式说明  \n[] 可选内容  \n<> 必选内容  \na|b 二选一  \n{ } 分组  \n... 同一内容可出现多次  \nDESCRIPTION 详细说明  \nOPTIONS  选项说明  \nEXAMPLES 示例  \nFILES  相关文件  \nAUTHOR 作者  \nCOPYRIGHT 版本信息  \nREPORTING BUGS bug信  \nSEE ALSO 其它帮助参考",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "man命令的操作方法：使用less命令实现",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "space, ^v, ^f, ^F: 向文件尾翻屏  \nb, $\\J\\wedge\\mathnormal{_{\\sf b}}$ : 向文件首部翻屏  \nd, ^d: 向文件尾部翻半屏u, $\\mathsf{\\wedge_{u}}.$ 向文件首部翻半屏RETURN, ^N, e, ^E or j or ^J: 向文件尾部翻一行  \ny or ^Y or ${\\mathsf{\\Pi}}\\wedge{\\mathsf{P}}$ or $\\boldsymbol{\\mathsf{k}}$ or $\\Join$ ：向文件首部翻一行  \nq: 退出  \n#：跳转至第#行  \n1G: 回到文件首部  \nG：翻至文件尾部  \n/KEYWORD以KEYWORD指定的字符串为关键字，从当前位置向文件尾部搜索；不区分字符大小写n：下一个N：上一个  \n?KEYWORD以KEYWORD指定的字符串为关键字，从当前位置向文件首部搜索；不区分字符大小写n：跟搜索命令同方向，下一个N：跟搜索命令反方向，上一个",
        "page_idx": 37
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "常用选项",
        "text_level": 1,
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "列出所有帮助",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "man -a keyword ",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "搜索man手册 ",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "#列出所有匹配的页面，使用 whatis 数据库man -k keyword",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "相当于 whatis",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "man -f keyword",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "打印man帮助文件的路径",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "man -w [章节] keyword ",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "范例:",
        "text_level": 1,
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#dnf install man-pages   \n[root@centos8 \\~]#man -w 1 passwd   \n/usr/share/man/man1/passwd.1.gz   \n[root@centos8 \\~]#whatis passwd   \nopenssl-passwd (1ssl) - compute password hashes   \npasswd (1) - update user's authentication tokens   \n[root@centos8 \\~]#man 1ssl openssl-passwd   \n[root@centos8 \\~]#man 7 ascii   \n[root@centos8 \\~]#man 7 utf8 ",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "范例: 查看passwd相关命令和文件,man帮助文件路径",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#whereis passwd   \npasswd: /usr/bin/passwd /etc/passwd /usr/share/man/man1/passwd.1.gz   \n/usr/share/man/man5/passwd.5.gz ",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "练习：",
        "text_level": 1,
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "1、在本机字符终端登录时，除显示原有信息外，再显示当前登录终端号，主机名和当前时间  \n2、今天18：30自动关机，并提示用户",
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "2.5 info ",
        "text_level": 1,
        "page_idx": 38
    },
    {
        "type": "text",
        "text": "man常用于命令参考 ，GNU工具 info 适合通用文档参考  \n没有参数,列出所有的页面  \ninfo  页面的结构就像一个网站  \n每一页分为“节点”  \n链接节点之前 \\*  \ninfo 命令格式",
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "info [ 命令 ]导航info页",
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "方向键，PgUp，PgDn 导航  \nTab键 移动到下一个链接d  显示主题目录Home 显示主题首部Enter进入 选定链接n/p/u/l 进入下/前/上一层/最后一个链接s 文字 文本搜索  \nq 退出 info",
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "2.6 命令自身提供的官方使用指南",
        "text_level": 1,
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "/usr/share/doc ",
        "text_level": 1,
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "多数安装了的软件包的子目录,包括了这些软件的相关原理说明  \n常见文档：README INSTALL CHANGES  \n不适合其它地方的文档的位置  \n配置文件范例  \nHTML/PDF/PS 格式的文档  \n授权书详情",
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "2.7 系统及第三方应用官方文档",
        "text_level": 1,
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "2.7.1 通过在线文档获取帮助",
        "text_level": 1,
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "http://www.github.com   \nhttps://www.kernel.org/doc/html/latest/   \nhttp://httpd.apache.org   \nhttp://www.nginx.org   \nhttps://mariadb.com/kb/en   \nhttps://dev.mysql.com/doc/   \nhttp://tomcat.apache.org   \nhttps://jenkins.io/zh/doc/   \nhttps://kubernetes.io/docs/home/   \nhttps://docs.openstack.org/train/ ",
        "page_idx": 39
    },
    {
        "type": "text",
        "text": "2.7.2 Linux官方在线文档和知识库",
        "text_level": 1,
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "通过发行版官方的文档光盘或网站可以获得安装指南、部署指南、虚拟化指南等",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "http://kbase.redhat.com   \nhttp://www.redhat.com/docs   \nhttp://access.redhat.com   \nhttps://help.ubuntu.com/lts/serverguide/index.html   \nhttp://tldp.org ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "2.7.3 红帽全球技术支持服务",
        "text_level": 1,
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "rhn.redhat.com或者本地卫星服务器/代理服务器",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "RHN账户为及其注册和基于网络管理的RHN用户",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "sosreport  收集所有系统上的日志信息的工具，并自动打成压缩包，方便技术支持人员和红帽全球支持提供分析问题依据",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "范例：",
        "text_level": 1,
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "[root@centos8 \\~]#dnf -y install sos   \n[root@centos8 \\~]#sosreport   \nsosreport (version 3.6)   \nThis command will collect diagnostic and configuration information from this CentOS Linux system and installed applications. ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "An archive containing the collected information will be generated in /var/tmp/sos.8fs1kg3w and may be provided to a CentOS support representative. ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "Any information provided to CentOS will be treated in accordance with the published support policies at: ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "https://wiki.centos.org/ ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "The generated archive may contain data considered sensitive and its content should be reviewed by the originating organization before being passed to any third party. ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "No changes will be made to system configuration. ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "Press ENTER to continue, or CTRL-C to quit. ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "Please enter the case id that you are generating this report for []: 2 ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "Setting up archive .   \nSetting up plugins .   \nRunning plugins. Please wait . ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "Finishing plugins [Running: processor] Finished running plugins Creating compressed archive.. ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "Your sosreport has been generated and saved in: ",
        "page_idx": 40
    },
    {
        "type": "text",
        "text": "/var/tmp/sosreport-centos8-2-2020-03-20-xllummc.tar.xz ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "The checksum is: ffbbe6fa9f009f4024e272fbce500bff ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "Please send this file to your support representative. ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "[root@centos8 sysconfig]#ll /var/tmp/sosreport-centos8-2-2020-03-20-   \nxllummc.tar.xz   \n-rw- 1 root root 4409596 Mar 20 18:57 /var/tmp/sosreport-centos8-2-2020-   \n03-20-xllummc.tar.xz   \n[root@centos8 sysconfig]#cd   \n[root@centos8 \\~]#ll /var/tmp/sosreport-centos8-2-2020-03-20-xllummc.tar.xz ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "2.8 相关网站和搜索",
        "text_level": 1,
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "http://www.google.com ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "Openstack filetype:pdf rhca site:redhat.com/docs ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "http://bing.com http://www.baidu.com http://www.slideshare.net ",
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "祝大家学业有成",
        "text_level": 1,
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "谢谢",
        "text_level": 1,
        "page_idx": 41
    },
    {
        "type": "text",
        "text": "讲师：王晓春邮箱：29308620@qq.com电话：400-080-6560",
        "page_idx": 41
    }
]